[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "projectname",
    "section": "",
    "text": "Preface\nThese pages are generated from a Git repository…",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "projectname",
    "section": "Section",
    "text": "Section\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "projectname",
    "section": "Section",
    "text": "Section\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "manuscript/index.html",
    "href": "manuscript/index.html",
    "title": "Notes to paperes",
    "section": "",
    "text": "index",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#evolution-on-x",
    "href": "manuscript/index.html#evolution-on-x",
    "title": "Notes to paperes",
    "section": "evolution on X",
    "text": "evolution on X\nThe production of gametes in sexually reproducing organisms is a complex, tightly regulated process involving numerous cellular and molecular mechanisms. In males, spermatogenesis—the process by which sperm are formed—progresses through four main stages of differentiation: from germ cells to spermatogonia, then to pachytene spermatocytes, round spermatids, and finally to mature spermatozoa (Wang et al. 2019). This process is fundamental to male fertility. Meiosis, a specialized form of cell division, ensures the proper pairing, recombination, and segregation of homologous chromosomes, thereby maintaining genetic integrity and promoting variation. A deep understanding of these molecular events is essential for comprehending inheritance, speciation, population genetics, and the biological causes of infertility.\nSex chromosomes differ from autosomes in several key ways due to their distinct patterns of inheritance and copy number. The Y chromosome is found only in males and exists as a single copy. In contrast, the X chromosome follows a more complex inheritance pattern: females carry two copies, while males carry only one. Consequently, the X chromosome resides two-thirds of the time in females and one-third in males, a distribution that influences how selection acts upon it. In males, the hemizygous nature of the X chromosome means that any mutations or deleterious alleles are fully exposed, without a second copy to mask their effects.\nThis feature is central to Haldane’s rule (Haldane 1922), which posits that in hybrids between two species, the heterogametic sex (e.g., XY in mammals or ZW in birds) is more likely to be inviable or sterile. While widely observed, the precise causes of this pattern remain a subject of ongoing debate. Several hypotheses have been proposed to explain it. One suggests that incompatibilities involving the Y chromosome can arise if it fails to remain compatible with the X chromosome or autosomes. Another centers on dosage compensation, proposing that hybridization may disrupt the regulatory mechanisms that balance gene expression between sex chromosomes. The dominance hypothesis argues that recessive deleterious alleles may be unmasked in the heterogametic sex, leading to sterility. Additional ideas include the faster evolution of male-biased reproductive genes, which can result in functional mismatches, and the accelerated divergence of X-linked loci compared to autosomes, known as faster-X evolution. Lastly, meiotic drive—genetic conflicts between selfish elements on sex chromosomes—has also been implicated in hybrid sterility.\nThese hypotheses underscore the complex interplay between sex chromosomes, selection, and hybridization (Cowell 2023). Although Haldane’s rule is consistently observed across diverse taxa—and even across kingdoms—the underlying mechanisms are not universally agreed upon. In many cases, multiple processes may act together (Lindholm et al. 2016).\nThe X chromosome, in particular, appears to be subject to strong and unique selective pressures, especially in primates. This topic is explored in greater depth in the following sections.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#chromatin-structure",
    "href": "manuscript/index.html#chromatin-structure",
    "title": "Notes to paperes",
    "section": "Chromatin structure",
    "text": "Chromatin structure\nRegions under strong selection across primate species—including humans and baboons—are consistently found on the X chromosome, spanning megabase-scale genomic areas. As previously noted, factors such as chromosomal architecture and structural rearrangements may play crucial roles in enabling, regulating, or insulating these regions from selective pressures.\nUnderstanding genome organization and variation is therefore essential for uncovering the mechanisms behind selection. Chromatin has long been recognized as central to gene regulation and cellular function (Lieberman-Aiden et al. 2009), in part because the 3D structure of chromosomes brings distant genomic elements into close contact. Disruption of this spatial organization can lead to developmental abnormalities (Dixon et al. 2015). Chromatin is organized hierarchically, with multiple levels of structure nested within one another (see Figure 2). At the broadest level, chromatin compartments can span several megabases (Lieberman-Aiden et al. 2009), while at finer scales, even 500 base pairs can contribute to subgenic structural organization. Structures such as topologically associating domains (TADs) and chromatin loops, which operate at sub-megabase scales, further help partition regulatory elements and maintain proper genomic function (Ramírez et al. 2018; Zuo et al. 2021).\nkigger på cromatin overgange er der noget der er anderledens i de områder konseveret er der noge specifikke motiver diversiteten\nChromatin, the complex of DNA wrapped around histone proteins and associated with various regulatory factors, plays a central role in the spatial and temporal control of gene expression, as well as in maintaining the structural integrity and stability of the genome. Far from being a static scaffold, chromatin is a highly dynamic entity, subject to extensive remodeling in response to cellular signals, developmental cues, and environmental stimuli. Its organization within the nucleus is hierarchical, ranging from nucleosomes to higher-order domains, and this architecture can differ substantially across cell types, developmental stages, and even between closely related species. One of the key features of chromatin organization is its division into functionally distinct states—broadly classified as euchromatin, which is generally open and transcriptionally active, and heterochromatin, which is compacted and repressive. Transitions between these states, whether developmentally programmed or evolutionarily emergent, are often tightly coupled to shifts in gene regulatory activity and cellular identity.\nIn this study, we focus on characterizing these chromatin state transitions, with a particular interest in understanding how they are distributed across the genome and whether they exhibit predictable patterns linked to specific sequence features or regulatory elements. We ask whether certain genomic regions are more prone to undergoing structural reorganization and whether such regions harbor conserved sequence motifs, epigenetic signatures, or binding sites for key regulatory proteins. Furthermore, we investigate whether particular chromatin configurations are disproportionately associated with genes involved in critical biological processes or with regions of the genome that show signatures of evolutionary constraint or adaptation.\nBy examining the diversity of chromatin states and transitions across individuals and lineages, we also aim to uncover broader principles governing chromatin architecture and its functional consequences. These insights may inform our understanding of how chromatin organization evolves, how it contributes to phenotypic diversity, and how its dysregulation may underlie disease states. Ultimately, this work contributes to a growing body of knowledge on the interplay between genome structure, function, and evolution.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#ab-configurations",
    "href": "manuscript/index.html#ab-configurations",
    "title": "Notes to paperes",
    "section": "A/B configurations",
    "text": "A/B configurations\nOne widely studied aspect of chromatin architecture is its partitioning into A and B compartments, as revealed by Hi-C and other genome conformation capture techniques. These compartments represent large-scale topological domains of the genome that differ markedly in their regulatory environment and functional output. A compartments are typically associated with euchromatic regions—open, accessible chromatin that is rich in actively transcribed genes, regulatory elements like enhancers and promoters, and active histone marks such as H3K4me3 and H3K27ac. In contrast, B compartments correspond to heterochromatic, transcriptionally repressive regions characterized by reduced accessibility, fewer active genes, and enrichment of repressive epigenetic marks like H3K9me3 and DNA methylation.\nThis spatial segregation of the genome into A and B compartments plays a critical role in regulating which genes are expressed in a given cell or context. Genes located in A compartments are more likely to be in close physical proximity to other regulatory elements, transcriptional machinery, and nuclear compartments that promote gene activation, such as nuclear speckles. Conversely, genes embedded in B compartments are more isolated from such transcriptional hubs and may be sequestered near the nuclear lamina, where gene silencing is reinforced.\nImportantly, the assignment of a genomic region to either an A or B compartment is not fixed; it can shift in response to developmental signals, environmental stress, or disease states. Such compartment switching is a powerful mechanism of gene regulation. For example, when a gene or regulatory locus moves from a B to an A compartment, it may become transcriptionally activated due to its new, more permissive chromatin environment. Likewise, genes that transition into B compartments often show downregulation or complete silencing. These dynamic shifts allow the cell to orchestrate complex gene expression programs with spatial precision, integrating structural and regulatory layers of genome function.\nMoreover, comparative studies across species and populations suggest that A/B compartmentalization is both conserved and evolutionarily flexible. Certain compartments—particularly those associated with developmental and housekeeping genes—are stably maintained across evolutionary time, reflecting strong selective pressure to preserve core regulatory networks. Other regions, especially those involved in species-specific traits or environmental responses, exhibit greater compartmental plasticity. By studying the distribution and dynamics of A/B compartments, especially in non-model organisms and hybrid genomes, we can gain novel insights into how chromatin structure evolves and how it contributes to phenotypic diversity and adaptation.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#gpn",
    "href": "manuscript/index.html#gpn",
    "title": "Notes to paperes",
    "section": "GPN",
    "text": "GPN\nRecent advances in artificial intelligence have brought powerful tools to genomics, particularly through the development of Genomic Pre-trained Networks (GPNs)—deep learning models trained on large-scale genomic sequence data using architectures inspired by natural language processing. GPNs apply self-supervised learning approaches, analogous to models like BERT or GPT, to the DNA sequence, learning to predict masked or missing bases in context. Through this training, GPNs develop an internal representation of the “language of the genome,” capturing patterns of sequence composition, motif syntax, and long-range dependencies that underlie regulatory function.\nA key advantage of GPNs lies in their use of transformer architectures, which differ significantly from traditional models like convolutional neural networks (CNNs). While CNNs are adept at recognizing short, fixed-length patterns—such as transcription factor binding motifs—they struggle with learning dependencies over long genomic distances, such as enhancer-promoter interactions or 3D chromatin looping. Transformers, in contrast, leverage self-attention mechanisms, which allow the model to compare and weigh relationships between all nucleotide positions in a sequence, regardless of distance. This makes them exceptionally well-suited for modeling the complex, multi-scale structure of regulatory DNA.\nThe utility of GPNs in functional genomics has been demonstrated in tasks such as predicting the effects of noncoding variants, chromatin accessibility, and transcription factor binding. For instance, the model introduced by Benegas and Batra (“DNA language models are powerful predictors of genome-wide variant effects”) showed that transformer-based GPNs outperform prior models in predicting variant impact across a variety of cell types and epigenomic contexts, even without explicit annotations. These models can generate base-resolution functional predictions across the genome, enabling insight into the likely regulatory role of any given sequence segment.\nIn the context of chromatin structure, GPNs hold particular promise for identifying sequence features that influence or correlate with A/B compartment identity. By learning patterns that distinguish sequences in open (A) versus closed (B) chromatin, GPNs can be used to predict how shifts in compartmentalization may arise from sequence variation. Furthermore, these predictions can be extended across species or populations to assess functional conservation—that is, whether a sequence maintains regulatory potential or compartment association despite genetic divergence.\nIn this study, we leverage GPN-derived embeddings and predictions to investigate the sequence determinants of chromatin organization. We aim to identify genomic regions where the GPN model predicts strong, conserved regulatory activity, and determine whether these regions also show structural stability in chromatin compartments across individuals or hybrid genomes. This approach allows us to assess whether chromatin transitions are driven primarily by changes in DNA sequence, or whether other regulatory layers (e.g., epigenetic modifications, chromatin remodelers) are required to explain shifts between A and B compartments.\nUltimately, integrating GPN predictions with chromatin conformation data (e.g., from Hi-C) provides a powerful framework for exploring genome function at multiple scales—from base-level regulatory logic to large-scale nuclear organization. These models not only enhance our ability to interpret genomic variation and conservation but also open new avenues for studying the evolution of regulatory architecture in systems such as primates, where hybridization and population structure offer unique opportunities to dissect genome regulation in action.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#cnn-vs-transformer",
    "href": "manuscript/index.html#cnn-vs-transformer",
    "title": "Notes to paperes",
    "section": "cnn vs transformer",
    "text": "cnn vs transformer\nConvolutional Neural Networks (CNNs) have been the foundational architecture in computer vision for over a decade. Introduced by LeCun et al. (1998) and popularized with the success of AlexNet (Krizhevsky et al., 2012), CNNs exploit spatial hierarchies in image data through local receptive fields and shared weights. Architectures such as VGGNet (Simonyan & Zisserman, 2015), ResNet (He et al., 2016), and EfficientNet (Tan & Le, 2019) have progressively improved the depth, scalability, and performance of CNNs, enabling state-of-the-art results in tasks such as image classification, object detection, and semantic segmentation.\nA simple Convolutional Neural Network (CNN) architecture typically consists of several key types of layers. The first are convolutional layers, which apply learnable filters (also known as kernels) to local regions of the input data. These filters are designed to capture spatial features such as edges, textures, and, as the network deepens, more complex patterns. Following the convolutional operations, activation functions are applied—most commonly the Rectified Linear Unit (ReLU)—to introduce non-linearity into the model, enabling it to learn more complex representations.\nPooling layers are another essential component of CNNs. These layers downsample the feature maps, typically using max pooling or average pooling, which reduces the spatial dimensions of the data while retaining the most salient features. This not only lowers computational requirements but also helps mitigate overfitting by providing a form of translation invariance. Toward the end of the architecture, fully connected layers are often used to perform high-level reasoning. These layers integrate the features extracted by earlier layers and are typically responsible for producing the final classification or regression outputs.\nOne of the main strengths of CNNs lies in their use of local receptive fields and weight sharing, which makes them highly effective at learning spatial hierarchies and translation-invariant features. Even relatively shallow CNNs can perform well on image-related tasks, particularly when training data is limited.\nCNNs offer several advantages. They are parameter-efficient due to filter sharing, which significantly reduces the number of learnable weights compared to fully connected networks. Their strong inductive bias—emphasizing locality and translation invariance—makes them particularly well-suited to visual data. Additionally, CNNs benefit from computational efficiency, as they are compatible with highly optimized GPU-based implementations, and they often require less data than more recent architectures to achieve good performance.\nHowever, CNNs also come with limitations. They tend to focus on local features, which makes capturing long-range dependencies challenging without additional architectural mechanisms. Their receptive field is fixed and limited, so incorporating larger contextual information often requires making the network deeper or using special techniques like dilated convolutions or skip connections. Furthermore, CNN performance can be sensitive to architectural choices such as filter sizes, layer depth, and stride configurations, which often require manual tuning.\nThese challenges have inspired researchers to explore alternative architectures, most notably Transformer models. Unlike CNNs, Transformers are designed to model global relationships more naturally, though often at the expense of requiring more data and computational resources.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#gpn-arcitecture",
    "href": "manuscript/index.html#gpn-arcitecture",
    "title": "Notes to paperes",
    "section": "GPN arcitecture",
    "text": "GPN arcitecture\nThe idea for this project was to evaluate the Genome-Pretrained Network (GPN) introduced in and determine whether it could achieve greater accuracy than traditional methods in predicting genome-wide variant effects.\nThe model is designed as a convolutional neural network (CNN) and takes input sequences with a window size of 512. During training, 15% of the positions within each window are masked to enable the model to learn meaningful representations.\nThe architecture consists of 25 layers, each structured as follows: a dilated convolution layer, followed by an add-and-norm layer with a skip connection from before the dilated convolution. This is followed by a feedforward layer, another add-and-norm layer, and additional skip connections.\nA feedforward layer is a fundamental component of neural networks, where inputs pass through one or more fully connected layers with activation functions, transforming data without looping back. This structure helps the model learn complex representations by applying weighted transformations and non-linearities.\nA dilated convolution expands the receptive field of a convolutional layer without increasing the number of parameters or reducing resolution. By spacing kernel elements apart, it captures long-range dependencies in sequences, making it particularly useful in genomic data analysis. When combined, dilated convolutions and feedforward layers enhance a model’s ability to recognize patterns across different scales efficiently.\nAfter passing through the 25 layers, the model produces a contextual embedding with a dimension of 512 (D=512), followed by classification layers. The final layer outputs the probabilities of the four nucleotides at each masked position.\nThe GPN variant effect prediction score is calculated as the log-likelihood ratio between the alternate (ALT) and reference (REF) alleles. Here, L represents the window length in base pairs, and D denotes the embedding dimension.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#data-preparation-and-pretraining-workflow",
    "href": "manuscript/index.html#data-preparation-and-pretraining-workflow",
    "title": "Notes to paperes",
    "section": "Data Preparation and Pretraining Workflow",
    "text": "Data Preparation and Pretraining Workflow\nTo evaluate the Genome-Pretrained Network (GPN), the initial step involved reproducing the pretraining workflow provided in the original publication. This workflow outlines the procedure for generating a dataset compatible with the model, specifically for masked language modeling over genomic sequences.\nInitial attempts to apply the workflow to a baboon genome dataset encountered technical difficulties. These issues were not intrinsic to the baboon data itself but stemmed from the implementation of the workflow. To ensure compatibility with the model and maintain consistency with the original study, the Anatoptis genome—used as the reference in the published work—was selected as a pilot dataset.\nAfter resolving the implementation issues, a dataset suitable for GPN pretraining was successfully generated. The resulting data consisted of masked genomic sequences, formatted according to the model’s input requirements.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#model-execution-workflow-and-hardware-constraints",
    "href": "manuscript/index.html#model-execution-workflow-and-hardware-constraints",
    "title": "Notes to paperes",
    "section": "Model Execution Workflow and Hardware Constraints",
    "text": "Model Execution Workflow and Hardware Constraints\nFollowing the successful generation of a pretraining-compatible dataset, the next step involved attempting to run the Genome-Pretrained Network (GPN) using the available inference and training workflows. The documentation provided on the model’s GitHub repository lacked detailed guidance, making it challenging to understand the complete execution process and the rationale behind certain steps.\nTo proceed, an alternative workflow was identified—one specifically designed for use with the Anatoptis genome. This workflow was adopted as a reference implementation for executing the GPN model.\nHowever, significant hardware limitations emerged during this phase. The original study reported using four NVIDIA A100 GPUs, each equipped with 80 GB of RAM. In contrast, the available system utilized NVIDIA L43R GPUs with 45 GB of RAM, resulting in substantial differences in computational capacity.\nAs a result, attempts to execute the GPN model encountered frequent out-of-memory (OOM) errors, particularly during forward passes through the deeper layers of the network. These memory constraints posed a major obstacle and significantly hindered reproducibility under the available hardware setup.\nInitial efforts to train or fine-tune the Genome-Pretrained Network (GPN) focused on applying the workflow to a baboon genome using a multi-GPU setup. The goal was to replicate the original training environment, which employed four NVIDIA A100 GPUs (80 GB RAM each). However, the available infrastructure utilized NVIDIA L43R GPUs, each with 45 GB of RAM, which introduced several compatibility and performance challenges.\nEarly testing began with the Anatoptis genome. Attempts to process the entire genome using the Snakemake workflow were unsuccessful due to GPU detection issues. These issues stemmed from the cluster configuration, which prevented the Snakemake environment from correctly interfacing with the available GPU hardware.\nAfter resolving these initial configuration issues, the workflow was executed with GPU support. While this improved performance, the model began encountering memory errors after a few hours of training, even when utilizing two to four GPUs in parallel. In an effort to overcome these constraints, the number of GPUs was incrementally increased—from four to six, and finally to eight—providing an aggregate of 360 GB of GPU RAM.\nDespite these efforts, the model continued to encounter out-of-memory (OOM) errors during execution. Even with eight GPUs, the memory demands of the GPN model remained prohibitive under the given cluster configuration. These persistent failures highlighted a significant limitation: the model’s architecture and resource demands exceeded the practical limits of the available hardware.\nUltimately, these constraints prevented successful execution of the GPN model on the tested system.\nGiven the persistent memory limitations encountered during full-genome processing, an alternative strategy was implemented. Rather than inputting the entire Anatoptis genome, the data was partitioned at the chromosome level. This allowed individual chromosomes to be processed independently, while still allocating the full available GPU resources (eight NVIDIA GPUs with a combined 360 GB of RAM) to each run.\nThis approach proved successful. When processing a single chromosome at a time, the GPN model was able to execute without encountering memory-related failures. As a result, contextual embeddings were successfully generated for individual chromosomes of the Anatoptis genome.\nHowever, due to time constraints near the conclusion of the project timeline, the extracted embeddings were not subjected to further downstream analysis. Although they were successfully retrieved and stored, no additional modeling, interpretation, or evaluation steps were completed within the project scope.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#using-hic-to-extract-transtion-areas",
    "href": "manuscript/index.html#using-hic-to-extract-transtion-areas",
    "title": "Notes to paperes",
    "section": "using HIC to extract transtion areas",
    "text": "using HIC to extract transtion areas",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#distance-between-the-edges",
    "href": "manuscript/index.html#distance-between-the-edges",
    "title": "Notes to paperes",
    "section": "distance between the edges",
    "text": "distance between the edges\nTo evaluate the availability of data across genomic distances and mitigate potential bias in downstream analyses, we calculated reverse cumulative counts of compartment edge half-distances. First, edges were identified at compartment transitions between A and B (in either direction). For each consecutive pair of such edges, we measured the genomic distance between their start positions and divided it by two, yielding the half-distance between edges.\nWe then binned these half-distances and computed the reverse cumulative count for each bin, which represents the number of edges with half-distances greater than or equal to that bin. This approach effectively measures the number of edges capable of contributing data at a given spatial scale. Using this metric allows us to normalize other measurements by the available data density, reducing the risk that apparent trends are driven by varying numbers of contributing edges at different distances rather than true biological effects. Counts were calculated up to 2 Mb to encompass the maximum observed separation.\n\n\n\n\n\n\nFigure 4.1: Reverse cumulative counts of compartment edge half-distances. Distances were calculated by first identifying sequential transitions between compartments A and B (or B and A). For each pair of transitions, the genomic distance between their start positions was measured and halved, producing the “half-distance” metric. The reverse cumulative count at a given bin shows the number of edges with half-distances greater than or equal to that bin’s center, representing the number of edges that could contribute data to measurements at that spatial scale. Extending the plot to 2 Mb captures the full range of half-distances observed.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#compare-gc-conent-to-transition-in-macaca",
    "href": "manuscript/index.html#compare-gc-conent-to-transition-in-macaca",
    "title": "Notes to paperes",
    "section": "compare GC conent to transition in macaca",
    "text": "compare GC conent to transition in macaca\nWe compared GC content between A and B chromatin compartments for chromosome 8 and chromosome X across five Macaca cell types: fibroblasts, sperm, round spermatids, pachytene spermatocytes, and spermatogonia. Chromatin compartments were defined from A–B and B–A structural transitions, and GC content was measured separately for each compartment.\nFor chromosome 8, the A compartment consistently showed higher GC content than the B compartment in all cell types, which aligns with expected genomic organization. In chromosome X, however, the differences between compartments were smaller. In round spermatids, GC content was nearly identical between A and B compartments, while in pachytene spermatocytes, spermatogonia, and sperm, A and B compartments had closely overlapping GC values. Interestingly, in fibroblasts the pattern was reversed, with the B compartment displaying higher GC content than the A compartment see Figure 4.2.\n\n\n\n\n\n\nFigure 4.2: Compartment analysis for chromosomes X and 8 in five Macaca cell types—fibroblasts, sperm, round spermatids, pachytene spermatocytes, and spermatogonia. GC content was remapped to genomic locations where chromatin structure transitions between compartments A and B. The data were separated so that each compartment contains only A or B structure. For each genomic bin, the plot shows the mean GC content, with error bars representing the standard deviation of the mean, adjusted by the effective edge contribution (accounting for how many edges contribute at longer distances).For chromosome 8, the A compartment exhibits higher GC content than the B compartment. In tissues involved in spermatogenesis, chromosome X shows similar GC content in both A and B compartments. In fibroblasts, GC content is higher in the B compartment than in the A compartment.\n\n\n\n\nCLAUDE NOTES",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#x-chromosome-compartments-and-gc-content-an-unexplored-frontier",
    "href": "manuscript/index.html#x-chromosome-compartments-and-gc-content-an-unexplored-frontier",
    "title": "Notes to paperes",
    "section": "X chromosome compartments and GC content: An unexplored frontier",
    "text": "X chromosome compartments and GC content: An unexplored frontier\nThe well-established pattern of higher GC content in A compartments versus B compartments on autosomes has not been quantitatively investigated for the X chromosome, despite extensive research on X chromosome compartmentalization. This represents a significant and surprising gap in our understanding of 3D genome organization, particularly given recent discoveries about the unique compartmental architecture of the X chromosome. ## Studies confirm extensive X chromosome compartment research Research on X chromosome compartmentalization has advanced dramatically, particularly with the 2021 discovery that even the inactive X chromosome contains hidden A/B-like compartments. Studies have mapped approximately 75 A/B-like compartments on the inactive X and 90 compartments on the active X in neural precursor cells, revealing a complex organizational structure previously thought to be absent. The original compartment discovery by Lieberman-Aiden and colleagues in 2009 established that A compartments are gene-rich, GC-rich, and transcriptionally active, while B compartments are gene-poor, AT-rich, and heterochromatic. This principle has been consistently validated across autosomal chromosomes, with studies showing strong correlations (r = 0.80) between compartment identity and GC content. ## The missing comparative analysis Despite extensive searching through major scientific databases and journals, no studies provide quantitative GC content percentages for A versus B compartments specifically on the X chromosome, nor do any offer comparative statistics between X chromosomal and autosomal compartment GC content. A 2017 structural modeling study confirmed that A and B compartments “are found to be associated with GC rich and AT rich sequences, respectively,” but provided no X chromosome-specific data. This gap is particularly striking given that researchers have characterized numerous other aspects of X chromosome compartmentalization, including epigenetic signatures, replication timing, and structural features. The absence of this fundamental comparison likely stems from several factors. X chromosome analysis presents unique technical challenges due to X-inactivation in females and hemizygosity in males, leading many genome-wide studies to exclude sex chromosomes from their analyses. Additionally, the discovery that inactive X chromosomes possess compartmental organization is very recent (2021), suggesting this area requires further investigation. ## X chromosome compartments display unique organizational features The X chromosome exhibits several distinctive compartmental characteristics that could affect GC content patterns differently than autosomes. During X-inactivation, standard A/B compartments undergo remodeling into specialized S1/S2 compartments, where S1 compartments are Xist-rich and correspond to gene-dense regions, while S2 compartments are Xist-poor and correspond to gene-poor regions. These then merge to create the characteristic “compartment-less” superstructure of the inactive X. The inactive X’s A-like compartments differ fundamentally from classical A compartments – they’re enriched in Xist RNA and H3K27me3 repressive marks rather than the active transcription marks (H3K4me3) typical of autosomal A compartments. Recent advances using micro-C and single-cell Hi-C technologies have revealed that the X chromosome maintains distinct bipartite megadomain structures separated by the Dxz4 boundary element, a configuration not seen in autosomes. These megadomains form stepwise during development through cohesin-dependent mechanisms, creating a unique architectural framework that could influence local GC content evolution patterns. Studies in 2024 demonstrated that X-megadomains appear transiently in extraembryonic lineages before establishing the final inactive X structure, representing a developmental trajectory unique to sex chromosomes. ## X-inactivation creates complex relationships with GC content The relationship between X-inactivation and compartment organization adds layers of complexity to potential GC content patterns. Escape genes, which maintain expression from the inactive X, preferentially localize to specific subcompartments and can comprise up to 30% of genes in escape-rich clusters. These genes tend to reside in regions that retain some characteristics of A-type compartments, remaining at the periphery of or outside the Xist RNA domain. SINE elements are enriched near promoters of escape genes, potentially facilitating their resistance to inactivation and creating local environments with distinct sequence composition. The mechanistic pathway of X-inactivation – involving Xist recruitment of HNRNPK, PRC1, and SMCHD1 – drives compartment formation through protein self-association, likely via liquid-liquid phase separation. This process creates spatial segregation between different types of heterochromatin on the inactive X, with S1 compartments enriched in Polycomb marks and S2 compartments enriched in H3K9me2/3-associated proteins. This unique heterochromatin organization could create GC content distributions that differ from the standard active/inactive dichotomy seen in autosomal compartments. ## Comparative analyses reveal broader evolutionary patterns While direct X chromosome compartment GC content data remains absent, comparative genomic studies provide relevant context. Research has demonstrated that X chromosomes show unique recombination suppression patterns that affect GC-biased gene conversion differently than autosomes. The reduced recombination on sex chromosomes influences the efficacy of selection on GC content evolution, potentially creating different equilibrium GC levels in compartments. Analysis across placental mammals revealed that genomic architecture constrains X chromosome evolution, with unique 3D folding patterns conserved across species despite extensive sequence divergence. The X chromosome maintains distinct superloop formations involving escapee loci, which may influence local GC content patterns through altered mutational processes or selection pressures. Studies have shown that active domains on the X localize to territory boundaries where GC content patterns may be influenced by transcriptional accessibility and DNA repair mechanisms that differ from those in autosomal compartments. ## Conclusion The lack of quantitative data comparing GC content between X chromosomal and autosomal A/B compartments represents a significant gap in our understanding of 3D genome organization. While the general principle that A compartments are GC-rich and B compartments are AT-rich is well-established for autosomes, whether this pattern holds equally on the X chromosome remains undemonstrated. Given the X chromosome’s unique architectural features – including specialized compartment types during inactivation, escape gene clustering, and distinctive evolutionary constraints – this comparison would provide crucial insights into the fundamental relationship between chromosome structure, sequence composition, and gene regulation. This unexplored frontier presents an important opportunity for future research to quantitatively characterize how sex chromosome compartmentalization relates to the GC content patterns so well documented in autosomes.",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#cpg-islands",
    "href": "manuscript/index.html#cpg-islands",
    "title": "Notes to paperes",
    "section": "CPG islands",
    "text": "CPG islands\nCpG islands (CGIs) are typically unmethylated DNA regions that are closely associated with gene promoters and play a crucial role in regulating chromatin accessibility and three-dimensional genome organization. Accumulating evidence demonstrates that changes in CGI methylation, histone modifications, or chromatin-binding proteins can drive or accompany transitions between chromatin compartments, shifting from active A compartments to repressive B compartments or vice versa. Such transitions are frequently observed in developmental processes, cancer progression, X-chromosome inactivation, and transcriptional regulation. In many cases, CGIs act as anchors or boundaries that help define chromatin domains, and their epigenetic state can strongly influence large-scale compartmental reorganization.\nRecent research on meiotic chromatin architecture provides insights that support this broader view of CGI function. A study by Wang et al. (2019) examined spermatogenesis in rhesus monkeys and mice using low-input Hi-C and found that canonical topologically associating domains (TADs) dissolve during the pachytene stage of meiosis, even while transcription continues. This observation suggests that TAD integrity is not strictly required for gene expression at this stage. Instead of the standard large-scale A/B compartmentalization, the study identified the emergence of smaller, refined A/B compartments that alternate between transcriptionally active and inactive domains. The formation of these fine-scale compartments was shown to depend on the synaptonemal complex (SC). In SC-defective mutants, canonical TADs reappeared, indicating that the SC suppresses TADs while enabling this unique compartmental structure. Notably, this reorganization of 3D chromatin architecture was conserved between monkeys and mice, suggesting a mammalian-wide regulatory principle (Wang et al., 2019).\nAlthough CpG islands were not the central focus of this study, the findings are consistent with the hypothesis that CGIs contribute to compartmental organization by functioning as boundary or anchoring elements. Because refined compartment transitions align with transcriptional activity, and CGIs are commonly associated with active transcription start sites, it is likely that they play a role in stabilizing the boundaries between alternating compartments. In this way, CGIs may provide local chromatin insulation while also influencing higher-order genome organization.\nwe investigatet how the CPG islands where locakedm compared to the compartment transition. this was done by remapping the compartment trasition to CPG islands location on the genome. the outgoing data where then filteret acording to the filter below\n    A_val = result[\n        ((result['comp'] == 'A') & (result['start'] &lt; 0)) |\n        ((result['comp'] == 'B') & (result['start'] &gt; 0))\n    ].copy()\n    B_val = result[\n        ((result['comp'] == 'A') & (result['start'] &gt; 0)) |\n        ((result['comp'] == 'B') & (result['start'] &lt; 0))\n    ].copy()\nIn this section, we restricted the analysis to chromosome X (chrX). We separated the data into A and B compartments and computed the absolute distance of each CpG island to the nearest compartment edge. The resulting distributions are shown in Figure Figure 5.2. The figure contains five panels—fibroblast, spermatogonia, pachytene spermatocyte, round spermatid, and sperm. In fibroblast, compartments A and B are similar up to ~0.8–1.0 Mb, after which the B compartment shows higher CpG-island counts. In spermatogonia and pachytene spermatocyte, A and B remain similar across distances. In round spermatid, we observe a divergence between compartments with higher counts between ~0.3 and 1.2 Mb. In sperm, A and B are similar up to ~1 Mb; beyond this distance there is little to no additional signal in the B compartment.\nApplying the same analysis to chromosome 8 (Figure 5.5), fibroblast shows elevated CpG-island counts in compartment A from ~0.6 to 1.4 Mb. In spermatogonia, A and B remain similar. In pachytene spermatocyte and round spermatid, counts are higher in compartment A from ~0 to 1.0 Mb compared with compartment B. The same pattern is observed in sperm, with substantially higher counts in compartment A than in compartment B.\n#fig-CPG_normalized_chrx",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#notes-for-cpg-islands",
    "href": "manuscript/index.html#notes-for-cpg-islands",
    "title": "Notes to paperes",
    "section": "notes for cpg islands",
    "text": "notes for cpg islands\nCpG islands, which are typically unmethylated and associated with gene promoters, play a pivotal role in chromatin accessibility and 3D genome organization. Multiple studies have demonstrated that chromatin compartment transitions (A to B or vice versa) can be driven or accompanied by changes in CpG island methylation, histone modifications, or chromatin-binding proteins. These changes are often observed in development, cancer progression, X-chromosome inactivation, and transcriptional regulation. CGIs frequently serve as anchors or boundaries for chromatin domains and their epigenetic status can correlate with large-scale compartment reorganization, particularly between transcriptionally active A compartments and repressive B compartments.\n\nartikler\nReprogramming of Meiotic Chromatin Architecture during Spermatogenesis (6) Key Findings Summary This paper investigates how 3D chromatin architecture is reorganized during spermatogenesis—specifically in rhesus monkey and mouse models—using low-input Hi-C (a chromosome conformation capture method).\nMajor Contributions: Loss and Re-establishment of TADs (Topologically Associating Domains):\nDuring meiosis, particularly in pachytene spermatocytes, most canonical TADs dissolve even though transcription continues. This suggests that TAD structure is not strictly required for active gene expression at this stage.\nEmergence of Refined Local A/B Compartments:\n\nInstead of standard large-scale A/B compartmentalization, fine-grained compartmental structures emerge. These “refined-A/B compartments” alternate between transcriptionally active and inactive domains.\nhese compartments are smaller, and their emergence implies a compartmental organization decoupled from transcription activity.-\n\nSynaptonemal Complex Dependency:\n\nThese refined compartments require a functional synaptonemal complex (SC). In SC-defective mutants, canonical TADs are restored, suggesting that the SC actively suppresses TADs while enabling fine-scale compartmentalization.\nThis is a novel role for the SC in 3D genome reorganization, beyond its known mechanical role in chromosome pairing and crossover formation.\n\nConservation Across Species:\n\nThe unique meiotic chromatin organization found in rhesus monkeys is conserved in mice, suggesting this is a mammalian-wide regulatory principle during gametogenesis.\n\n\nImplication for CpG Islands:\nWhile CpG islands (CGIs) are not the primary focus of this paper, the study supports the broader hypothesis that CGIs may serve as boundary or anchoring elements in fine-scale compartment formation during meiosis:\nThe refined-A/B structure shows domain transitions that correlate with transcription activity, a feature often influenced by CGI presence at promoter regions.\nSince CGIs are associated with active transcription start sites, they likely anchor boundaries between alternating compartments, effectively contributing to local chromatin insulation or regulation.\n(article?){Wang2019, year = {2019}, title = {{Reprogramming of Meiotic Chromatin Architecture during Spermatogenesis}}, author = {Wang, Yu and Wang, Hui and Zhang, Yixiao and Du, Zheng and Si, Wei and Fan, Shuhan and Qin, Dong and Liu, Yuliang and Liu, Yuhan and Xu, Shiyuan and others}, journal = {Molecular Cell}, issn = {1097-4164}, doi = {10.1016/j.molcel.2018.11.019}, abstract = {{Chromatin organization undergoes drastic reconfiguration during gametogenesis. However, the molecular reprogramming of three-dimensional chromatin structure in this process remains poorly understood for mammals, including primates. Here, we examined three-dimensional chromatin architecture during spermatogenesis in rhesus monkey using low-input Hi-C. Interestingly, we found that topologically associating domains (TADs) undergo dissolution and reestablishment in spermatogenesis. Strikingly, pachytene spermatocytes, where synapsis occurs, are strongly depleted for TADs despite their active transcription state but uniquely show highly refined local compartments that alternate between transcribing and non-transcribing regions (refined-A/B). Importantly, such chromatin organization is conserved in mouse, where it remains largely intact upon transcription inhibition. Instead, it is attenuated in mutant spermatocytes, where the synaptonemal complex failed to be established. Intriguingly, this is accompanied by the restoration of TADs, suggesting that the synaptonemal complex may restrict TADs and promote local compartments. Thus, these data revealed extensive reprogramming of higher-order meiotic chromatin architecture during mammalian gametogenesis.}}, volume = {73}, number = {3}, pages = {547–561.e6}, pmid = {30686580}, local-url = {https://www.cell.com/molecular-cell/fulltext/S1097-2765(18)30989-4} }\n\n\nmaybe relevant articles:\nReconstructing A/B compartments as revealed by Hi-C using long-range correlations in epigenetic data (3)\nSmchd1-Dependent and -Independent Pathways Determine Developmental Dynamics of CpG Island Methylation on the Inactive X Chromosome (4)\n\n\n\n\n\n\nFigure 5.1: chrX\n\n\n\n\n\n\n\n\n\nFigure 5.2: chrX\n\n\n\n\n\n\n\n\n\nFigure 5.3: chrX",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "manuscript/index.html#chr-8",
    "href": "manuscript/index.html#chr-8",
    "title": "Notes to paperes",
    "section": "chr 8",
    "text": "chr 8\n\n\n\n\n\n\nFigure 5.4: chr8\n\n\n\n\n\n\n\n\n\nFigure 5.5: chr8\n\n\n\n\n\n\n\n\n\nFigure 5.6: chr8",
    "crumbs": [
      "Manuscript",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Notes to paperes</span>"
    ]
  },
  {
    "objectID": "thesis/index.html",
    "href": "thesis/index.html",
    "title": "Title of my thesis",
    "section": "",
    "text": "Abstract\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n\nIntroduction\nFringilla sem fusce vivamus pellentesque in commodo penatibus bibendum. Vestibulum aptent volutpat vehicula eu rutrum lobortis consequat. Euismod lectus ultrices; duis duis ipsum rhoncus. Ipsum vitae primis potenti suscipit per nascetur rutrum lobortis. Scelerisque pulvinar duis interdum sapien elementum consequat vitae orci. Suspendisse tempor nisl accumsan dolor potenti euismod sed.\n# Here is example python code\nprint(\"Hello world\")\nHere is a reference (Nielsen and Slatkin 2016)\n\n\nReferences\n\n\nNielsen, Rasmgb, and Montgomery Slatkin. 2016. An Introduction to Population Genetics: Theory and Applications.",
    "crumbs": [
      "Thesis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Title of my thesis</span>"
    ]
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Example",
    "section": "",
    "text": "Admixture displacement in each geographical region",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#admixture-displacement-in-each-geographical-region",
    "href": "slides/index.html#admixture-displacement-in-each-geographical-region",
    "title": "Example",
    "section": "",
    "text": "This is a subtitle\nHere we have some text that may run over several lines of the slide frame, depending on how long it is.\n\nfirst item\n\nA sub item\n\n\nNext, we’ll brief review some theme-specific components.\n\nNote that all of the standard Reveal.js features can be used with this theme, even if we don’t highlight them here.",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#additional-theme-classes",
    "href": "slides/index.html#additional-theme-classes",
    "title": "Example",
    "section": "Additional theme classes",
    "text": "Additional theme classes\n\nSome extra things you can do with the clean theme\nSpecial classes for emphasis\n\n.alert class for default emphasis, e.g. important note.\n.fg class for custom colour, e.g. important note.\n.bg class for custom background, e.g. important note.\n\nCross-references\n\n.button class provides a Beamer-like button, e.g. Summary",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#social-norms",
    "href": "slides/index.html#social-norms",
    "title": "Example",
    "section": "Social norms",
    "text": "Social norms\n\nSampling\nWe used a sample size of 24.\nIn Denmark, the workplace interaction is very informal and largely unaffected by seniority and age.\n\n\n\nThe 24 subjects from workplaces in Denmark were interviewed …. blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#social-norms-1",
    "href": "slides/index.html#social-norms-1",
    "title": "Example",
    "section": "Social norms",
    "text": "Social norms\n\nNeither academic seniority or age affected interaction\n\n\n\n\n\n\n\n\n\nFigure 3.1: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.\n\n\n\n\n\n\n\n\n\n\nThe correlation between informality and age was -0.163.",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#slide-title",
    "href": "slides/index.html#slide-title",
    "title": "Example",
    "section": "Slide title",
    "text": "Slide title\n\n\nEat spaghetti\nDrink wine",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#slide-title-1",
    "href": "slides/index.html#slide-title-1",
    "title": "Example",
    "section": "Slide title",
    "text": "Slide title\n\n\nLeft column\n\n\nOne\nTwo\nThree",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#admixture-displacement-in-each-geographical-region-1",
    "href": "slides/index.html#admixture-displacement-in-each-geographical-region-1",
    "title": "Example",
    "section": "Admixture displacement in each geographical region",
    "text": "Admixture displacement in each geographical region\n\n\n\n\n\nThe correlation between informality and age was -0.163.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.2: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "slides/index.html#slide-title-2",
    "href": "slides/index.html#slide-title-2",
    "title": "Example",
    "section": "Slide Title",
    "text": "Slide Title\nSlide content\n\n\n\n\nSchumer et al. (2018)",
    "crumbs": [
      "Slides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Example</span>"
    ]
  },
  {
    "objectID": "notebooks/example.html",
    "href": "notebooks/example.html",
    "title": "Workplace interaction",
    "section": "",
    "text": "Sampling\nImport some plotting libraries and set some defaults:\nsubjects = pd.read_csv('../data/data_table.csv')\nassert subjects.index.size == params.sample_size\nsubjects\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\n\n\n\n\n0\nJulie\n27\nF\nPhDstudent\nDK\n\n\n1\nThomas\n33\nM\nPostdoc\nGB\n\n\n2\nEmilie\n23\nF\nPhDstudent\nCH\n\n\n3\nSofie\n31\nF\nPostdoc\nDK\n\n\n4\nSara\n29\nF\nPostdoc\nUS\n\n\n5\nCecilie\n34\nF\nPostdoc\nDK\n\n\n6\nAnders\n32\nM\nPhDstudent\nUK\n\n\n7\nEmma\n42\nF\nProfessor\nDK\n\n\n8\nCaroline\n31\nF\nPhDstudent\nDK\n\n\n9\nLaura\n30\nF\nPostdoc\nDK\n\n\n10\nMikkel\n33\nM\nPostdoc\nNL\n\n\n11\nJens\n27\nM\nPhDstudent\nDK\n\n\n12\nAndreas\n29\nM\nPhDstudent\nDK\n\n\n13\nJakob\n28\nM\nPhDstudent\nDK\n\n\n14\nMathilde\n61\nF\nProfessor\nDK\n\n\n15\nKatrine\n35\nF\nPostdoc\nDK\n\n\n16\nPoul\n30\nM\nPostdoc\nDK\n\n\n17\nAnna\n26\nF\nPhDstudent\nDK\n\n\n18\nPeter\n42\nM\nProfessor\nGB\n\n\n19\nIda\n53\nF\nPostdoc\nDK\n\n\n20\nFreja\n30\nF\nPostdoc\nDK\n\n\n21\nMaria\n39\nF\nProfessor\nUK\n\n\n22\nAmalie\n29\nF\nPhDstudent\nDK\n\n\n23\nCamilla\n35\nF\nPostdoc\nDK\n# with pd.option_context('display.max_rows', None,): # prints *all* rows\n#     display(subjects.style.hide()) # .style.hide() hides the index)\nsubjects.style.hide()\n\n\n\nTable 4.1: People included in the analysis.\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\n\n\n\n\nJulie\n27\nF\nPhDstudent\nDK\n\n\nThomas\n33\nM\nPostdoc\nGB\n\n\nEmilie\n23\nF\nPhDstudent\nCH\n\n\nSofie\n31\nF\nPostdoc\nDK\n\n\nSara\n29\nF\nPostdoc\nUS\n\n\nCecilie\n34\nF\nPostdoc\nDK\n\n\nAnders\n32\nM\nPhDstudent\nUK\n\n\nEmma\n42\nF\nProfessor\nDK\n\n\nCaroline\n31\nF\nPhDstudent\nDK\n\n\nLaura\n30\nF\nPostdoc\nDK\n\n\nMikkel\n33\nM\nPostdoc\nNL\n\n\nJens\n27\nM\nPhDstudent\nDK\n\n\nAndreas\n29\nM\nPhDstudent\nDK\n\n\nJakob\n28\nM\nPhDstudent\nDK\n\n\nMathilde\n61\nF\nProfessor\nDK\n\n\nKatrine\n35\nF\nPostdoc\nDK\n\n\nPoul\n30\nM\nPostdoc\nDK\n\n\nAnna\n26\nF\nPhDstudent\nDK\n\n\nPeter\n42\nM\nProfessor\nGB\n\n\nIda\n53\nF\nPostdoc\nDK\n\n\nFreja\n30\nF\nPostdoc\nDK\n\n\nMaria\n39\nF\nProfessor\nUK\n\n\nAmalie\n29\nF\nPhDstudent\nDK\n\n\nCamilla\n35\nF\nPostdoc\nDK\nThe 24 subjects from workplaces in Denmark were interviewed …. blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workplace interaction</span>"
    ]
  },
  {
    "objectID": "notebooks/example.html#sampling",
    "href": "notebooks/example.html#sampling",
    "title": "Workplace interaction",
    "section": "",
    "text": "Tip:\nBy adding a label and caption to a cell displaying a table, you can refer to that table elsewhere and insert it in a manuscript.\n\n\n\nTip:\nBy generaing markdown for descriptions that will eventually end up in the manuscript, you can imbed python values. It also ensures that the manuscript exactly reflects the notebook.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workplace interaction</span>"
    ]
  },
  {
    "objectID": "notebooks/example.html#interviews",
    "href": "notebooks/example.html#interviews",
    "title": "Workplace interaction",
    "section": "Interviews",
    "text": "Interviews\nIn interviewed {python} params.sample_size workplace individuals were interviewed by …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\n\n# generate some random sample data\nscores = pd.DataFrame({\n    'name': subjects.name, \n    'informality': np.random.normal(loc=10, scale=1, size=params.sample_size)\n})\ndata = pd.merge(subjects, scores, on='name')\ndata\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\ninformality\n\n\n\n\n0\nJulie\n27\nF\nPhDstudent\nDK\n9.089594\n\n\n1\nThomas\n33\nM\nPostdoc\nGB\n8.348845\n\n\n2\nEmilie\n23\nF\nPhDstudent\nCH\n9.860340\n\n\n3\nSofie\n31\nF\nPostdoc\nDK\n9.236473\n\n\n4\nSara\n29\nF\nPostdoc\nUS\n10.770385\n\n\n5\nCecilie\n34\nF\nPostdoc\nDK\n10.257653\n\n\n6\nAnders\n32\nM\nPhDstudent\nUK\n8.047080\n\n\n7\nEmma\n42\nF\nProfessor\nDK\n11.498945\n\n\n8\nCaroline\n31\nF\nPhDstudent\nDK\n11.498402\n\n\n9\nLaura\n30\nF\nPostdoc\nDK\n9.067757\n\n\n10\nMikkel\n33\nM\nPostdoc\nNL\n8.440463\n\n\n11\nJens\n27\nM\nPhDstudent\nDK\n10.007813\n\n\n12\nAndreas\n29\nM\nPhDstudent\nDK\n9.779177\n\n\n13\nJakob\n28\nM\nPhDstudent\nDK\n8.666128\n\n\n14\nMathilde\n61\nF\nProfessor\nDK\n9.234076\n\n\n15\nKatrine\n35\nF\nPostdoc\nDK\n10.215683\n\n\n16\nPoul\n30\nM\nPostdoc\nDK\n9.251555\n\n\n17\nAnna\n26\nF\nPhDstudent\nDK\n11.388422\n\n\n18\nPeter\n42\nM\nProfessor\nGB\n9.946008\n\n\n19\nIda\n53\nF\nPostdoc\nDK\n10.150439\n\n\n20\nFreja\n30\nF\nPostdoc\nDK\n11.432069\n\n\n21\nMaria\n39\nF\nProfessor\nUK\n10.748114\n\n\n22\nAmalie\n29\nF\nPhDstudent\nDK\n9.131887\n\n\n23\nCamilla\n35\nF\nPostdoc\nDK\n11.510536\n\n\n\n\n\n\n\n\nplt.figure(figsize=(4,3))\nsns.scatterplot(x='age', y='informality', data=data, hue='position', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age')\nplt.legend(title='Seniority', loc='lower right')\nplt.ylim(bottom=0) ;\n\n\n\n\n\n\n\nFigure 4.1: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.\n\n\n\n\n\nor plotted differently:\n\n#plt.figure(figsize=(4,3))\ng = sns.FacetGrid(data=data, col=\"nationality\",hue=\"position\", palette='viridis', aspect=0.9)\ng.map(sns.scatterplot, 'age', 'informality')\n#sns.scatterplot(x='age', y='informality', data=data, hue='position', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age')\nplt.legend(title='Seniority', loc='lower right') ;\n\n\n\n\n\n\n\nFigure 4.2: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.\n\n\n\n\n\nSeems Danish people act very informally unaffected by age and seniority.\n\ninformality_age_cor = data.informality.corr(data.age)\ninformality_age_cor\n\n0.0502201862207874\n\n\n\nmean_informality = data.groupby(['position', 'nationality']).informality.mean().to_frame().reset_index()\nmean_informality = mean_informality.sort_values('informality')#.style.hide() # hide index\n\nTo show the mean_informality table, in a way that allow you to cite and embed it elsewhere, you need to provide a label, and preferably a caption, for it, as shown below. For this use, you also need to use the display function:\n\ndisplay(mean_informality)\n\n\n\nTable 4.2: Mean interaction scores by position and nationality.\n\n\n\n\n\n\n\n\n\n\nposition\nnationality\ninformality\n\n\n\n\n2\nPhDstudent\nUK\n8.047080\n\n\n4\nPostdoc\nGB\n8.348845\n\n\n5\nPostdoc\nNL\n8.440463\n\n\n0\nPhDstudent\nCH\n9.860340\n\n\n1\nPhDstudent\nDK\n9.937346\n\n\n8\nProfessor\nGB\n9.946008\n\n\n3\nPostdoc\nDK\n10.140271\n\n\n7\nProfessor\nDK\n10.366510\n\n\n9\nProfessor\nUK\n10.748114\n\n\n6\nPostdoc\nUS\n10.770385\n\n\n\n\n\n\n\n\n\n\n\nTip: To render a nice table without the index column, you can do this to the display function instead: Markdown(df.to_markdown(index=False))\n\n\nThe table above shows the mean informality scores by\n\n\n\n\n\n\n\n\n\nFigure 4.3: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.\n\n\n\n\n\n\n\nThe correlation between informality and age was -0.163.\n\n\n\nsns.lmplot(x='age', y='informality', data=data, hue='position', palette='viridis', height=3, aspect=4/3)\nplt.ylabel('How informal you can be')\nplt.xlabel('Age') ;\n\n\n\n\n\n\n\nFigure 4.4: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workplace interaction</span>"
    ]
  },
  {
    "objectID": "workflow.html",
    "href": "workflow.html",
    "title": "Making a dataset for GPN",
    "section": "",
    "text": "Imports and utility functions\nimport os\nfrom pathlib import Path\nfrom gwf import Workflow, AnonymousTarget\nfrom gwf.workflow import collect\nimport glob\nimport yaml\nimport pandas as pd\nimport re\nimport time\nInstantiate the workflow with the name of the project folder:\n# instantiate the workflow\n#gwf = Workflow(defaults={'account': 'baboons'})\ngwf = Workflow(defaults={'account': 'TopicsInBioinformatics'})\n\n\nconfig = yaml.safe_load(open(\"scripts/generate_dataset/workflow.yaml\"))\n\n# Define the base directory\nbase_dir = \"/home/johanulstrup/johan_gpn/people/johanulsrup/johan_gpn\"\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\n=======\n#base_dir = \"/faststorage/project/johan_gpn/people/johanulsrup/johan_gpn\"\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4d3645e (WIP: save local changes)\n\n\n## loading data and preparatoin (pandas)\nassemblies = pd.read_csv(config['assemblies_path'], sep='\\t')\nassemblies[\"Assembly Name\"] = assemblies[\"Assembly Name\"].str.replace(\" \", \"_\")\nassemblies.set_index(\"Assembly Accession\", inplace=True)\nassemblies[\"genome_path\"] = [f\"{base_dir}/steps/tmp/{i}/ncbi_dataset/data/{i}/{i}_{n}_genomic.fna\" for i, n in zip(assemblies.index, assemblies[\"Assembly Name\"])]\nassemblies[\"annotation_path\"] = [f\"{base_dir}/steps/tmp/{i}/ncbi_dataset/data/{i}/genomic.gff\" for i in assemblies.index]\nUtility functions:\n# utility function\ndef modify_path(path, **kwargs):\n    \"\"\"\n    Utility function for modifying file paths substituting\n    the directory (dir), base name (base), or file suffix (suffix).\n    \"\"\"\n\n    for key in ['dir', 'base', 'suffix']:\n        kwargs.setdefault(key, None)\n    assert len(kwargs) == 3\n\n    par, name = os.path.split(path)\n    name_no_suffix, suf = os.path.splitext(name)\n    if type(kwargs['suffix']) is str:\n        suf = kwargs['suffix']\n    if kwargs['dir'] is not None:\n        par = kwargs['dir']\n    if kwargs['base'] is not None:\n        name_no_suffix = kwargs['base']\n\n    new_path = os.path.join(par, name_no_suffix + suf)\n    if type(kwargs['suffix']) is tuple:\n        assert len(kwargs['suffix']) == 2\n        new_path, nsubs = re.subn(r'{}$'.format(kwargs['suffix'][0]), kwargs['suffix'][1], new_path)\n        assert nsubs == 1, nsubs\n    \n\n    return new_path",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Making a dataset for GPN</span>"
    ]
  },
  {
    "objectID": "workflow.html#template-functions",
    "href": "workflow.html#template-functions",
    "title": "Making a dataset for GPN",
    "section": "Template functions:",
    "text": "Template functions:\n\n# task template function\ndef download_genome(assembly):\n    #print(f\"Downloading genome for assembly: {assembly}\")\n\n    tmp_dir = f\"{base_dir}/steps/tmp/{assembly}\"\n    genome_path = assemblies.loc[assembly, \"genome_path\"]\n    annotation_path = assemblies.loc[assembly, \"annotation_path\"]\n\n    inputs = [config['assemblies_path']]\n    genome_file = f\"{base_dir}/steps/genome/{assembly}.fa.gz\"\n    annotation_file = f\"{base_dir}/steps/annotation/{assembly}.gff.gz\"\n    outputs = [genome_file, annotation_file]\n    options = {'memory': '8g', 'walltime': '02:00:00'}\n\n    spec = f\"\"\"\n        orig=$(pwd)\n        mkdir -p {base_dir}/steps/genome && \n        mkdir -p {base_dir}/steps/annotation && \n        mkdir -p {tmp_dir} && \n        cd {tmp_dir} && \n        datasets download genome accession {assembly} --include genome,gff3 &&\n        unzip -o ncbi_dataset.zip && \n        cd $orig && \n        gzip -c {genome_path} &gt; {genome_file} && \n        gzip -c {annotation_path} &gt; {annotation_file} && rm -r {tmp_dir}\n    \"\"\"\n\n    #print(f\"Spec for {assembly}: {spec}\")\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\ndef convert_fna_and_gff(assembly):\n    \"\"\"\n    Converts pre-downloaded .fna and .gff files to .fa.gz and .gff.gz\n    so they match the expected workflow input format.\n    \"\"\"\n    # Paths to pre-downloaded genome & annotation files\n    pre_downloaded_genome_path = \"/home/johanulstrup/johan_gpn/people/johanulsrup/johan_gpn/data/ncbi_dataset/data/GCF_000264685.3/GCF_000264685.3_Panu_3.0_genomic.fna\"\n    pre_downloaded_annotation_path = \"/home/johanulstrup/johan_gpn/people/johanulsrup/johan_gpn/data/ncbi_dataset/data/GCF_000264685.3/genomic.gff\"\n\n    # Destination paths\n    genome_file = f\"{base_dir}/steps/genome/{assembly}.fa.gz\"\n    annotation_file = f\"{base_dir}/steps/annotation/{assembly}.gff.gz\"\n\n    # Workflow settings\n    inputs = [pre_downloaded_genome_path, pre_downloaded_annotation_path]\n    outputs = [genome_file, annotation_file]\n    options = {'memory': '8g', 'walltime': '00:30:00'}\n\n    # Command to compress both files\n    spec = f\"\"\"\n        mkdir -p {base_dir}/steps/genome &&\n        mkdir -p {base_dir}/steps/annotation &&\n        gzip -c {pre_downloaded_genome_path} &gt; {genome_file} &&\n        gzip -c {pre_downloaded_annotation_path} &gt; {annotation_file}\n    \"\"\"\n\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\n\ndef make_all_intervals(assembly):\n    inputs = [f\"{base_dir}/steps/genome/{assembly}.fa.gz\"]\n    outputs = [f\"{base_dir}/steps/intervals/{assembly}/all.parquet\"]\n    options = {'memory': '8g', 'walltime': '02:00:00'} \n    spec = f\"\"\"\n    mkdir -p {base_dir}/steps/intervals/{assembly} &&\n    python scripts/generate_dataset/make_all_intervals.py {inputs[0]} {outputs[0]} {config['window_size']}\n    \"\"\"\n    #print(f\"Spec for make_all_intervals {assembly}: {spec}\")\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef make_defined_intervals(assembly): ## does not show up in gwf\n    inputs = [f\"{base_dir}/steps/genome/{assembly}.fa.gz\"]\n    outputs = [f\"{base_dir}/steps/intervals/{assembly}/defined.parquet\"]\n    options = {'memory': '8g', 'walltime': '02:00:00'} \n    spec = f\"\"\"\n    mkdir -p steps/intervals/{assembly} &&\n    python scripts/generate_dataset/make_defined_intervals.py {inputs[0]} {outputs[0]} {config['window_size']}\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef make_annotation_intervals(assembly, feature):\n    inputs = [f\"{base_dir}/steps/intervals/{assembly}/defined.parquet\",\n              f\"{base_dir}/steps/genome/{assembly}.fa.gz\"]\n    outputs = [f\"{base_dir}/steps/intervals/{assembly}/annotation_{feature}.parquet\"]\n    options = {'memory': '8g', 'walltime': '02:00:00'} \n    include_flank = config.get(\"annotation_features_include_flank\", config['window_size'] // 2)\n    add_jiter = config.get(\"annotation_features_add_jitter\", 100)\n    spec = f\"\"\"\n    mkdir -p steps/intervals/{assembly} &&\n    python scripts/generate_dataset/make_annotation_intervals.py {inputs[0]} {inputs[1]} {outputs[0]} \\\n        {config['window_size']} {feature} {include_flank} {add_jiter}\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef make_balanced_v1_intervals(assembly):  ### maybe not that inmpotent becuase it was the date created for the paper \n    inputs = [f\"{base_dir}/steps/intervals/{assembly}/defined.parquet\",\n              f\"{base_dir}/steps/annotation/{assembly}.gff.gz\"]\n    outputs = [f\"{base_dir}/steps/intervals/{assembly}/balanced_v1.parquet\"]\n    options = {'memory': '8g', 'walltime': '02:00:00'} \n    promoter_upstream = config.get(\"promoter_upstream\", 1000)\n    spec = f\"\"\"\n    mkdir -p steps/intervals/{assembly} &&\n    python scripts/generate_dataset/make_defined_intervals.py {inputs[0]} {outputs[0]} \\\n        {config['window_size']} {promoter_upstream}\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef make_dataset_assembly(assembly):\n    splits = [\"train\", \"validation\", \"test\"]\n    inputs = [f\"{base_dir}/steps/intervals/{assembly}/{config['target_intervals']}.parquet\",      ### it ask for data in a folder that does not exist\n              f\"{base_dir}/steps/genome/{assembly}.fa.gz\"]                                        ### it ask for data in a folder that does not exist\n    outputs = [f\"{base_dir}/steps/dataset_assembly/{assembly}/{split}.parquet\" for split in splits]\n    options = {'memory': '32g', 'walltime': '02:00:00'} \n    spec = f\"\"\"\n    mkdir -p steps/intervals/{assembly} &&    \n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n    python scripts/generategenerate_dataset_data_set/make_dataset_assembly.py {' '.join(inputs)} {' '.join(outputs)} \\\n=======\n    python scripts/generate_dataset/make_dataset_assembly.py {' '.join(inputs)} {' '.join(outputs)} \\\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4d3645e (WIP: save local changes)\n        {config['split_proportion']} {config['window_size']} {config['step_size']} {config['add_rc']} \\\n        {config['whitelist_validation_chroms']} {config['whitelist_test_chroms']}\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n## download_targets = gwf.map(download_genome, assemblies.index)\ndownload_targets = gwf.map(convert_fna_and_gff, assemblies.index)\n\n\nfrom gpn.data import (\n    Genome, load_table, get_balanced_intervals, filter_length,\n    filter_annotation_features,\n)\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\ndef merge_datasets(assembly):\n    splits = [\"train\", \"validation\", \"test\"]\n    inputs = [f\"{base_dir}/steps/dataset_assembly/{assembly}/{split}.parquet\" for split in splits]\n    output_dir = f\"{base_dir}/steps/dataset/data/{assembly}\"\n    options = {'memory': '32g', 'walltime': '02:00:00'} \n    spec = f\"\"\"\n    mkdir -p {output_dir} &&    \n    python /faststorage/project/johan_gpn/people/johanulsrup/johan_gpn/scripts/generate_dataset/make_merge_datasets.py {' '.join(inputs)} {output_dir}\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=[output_dir], options=options, spec=spec)\n=======\n# def merge_datasets(assembly):\n#     splits = [\"train\", \"validation\", \"test\"]\n#     inputs = [f\"{base_dir}/steps/dataset_assembly/{assembly}/{split}.parquet\" for split in splits]\n#     output_dir = f\"{base_dir}/steps/dataset/data/{assembly}\"\n#     options = {'memory': '32g', 'walltime': '02:00:00'} \n#     spec = f\"\"\"\n#     #python /faststorage/project/johan_gpn/people/johanulsrup/johan_gpn/scripts/generate_dataset/make_merge_datasets.py {' '.join(inputs)} {output_dir}\n#     python /home/johanulstrup/johan_gpn/people/johanulsrup/johan_gpn/scripts/generate_dataset/make_merge_datasets.py {' '.join(inputs)} {output_dir}\n#     \"\"\"\n#     return AnonymousTarget(inputs=inputs, outputs=[output_dir], options=options, spec=spec)\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4d3645e (WIP: save local changes)",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Making a dataset for GPN</span>"
    ]
  },
  {
    "objectID": "workflow.html#logic-for-target-intervals-defind-in-the-yaml-file",
    "href": "workflow.html#logic-for-target-intervals-defind-in-the-yaml-file",
    "title": "Making a dataset for GPN",
    "section": "Logic for target intervals defind in the yaml file:",
    "text": "Logic for target intervals defind in the yaml file:",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Making a dataset for GPN</span>"
    ]
  },
  {
    "objectID": "reports/example.html",
    "href": "reports/example.html",
    "title": "Markdown in Quarto",
    "section": "",
    "text": "Including BibTex references\nThere are many ways to manage BibTex references. In ReadCube Papers, you just right-click to select Copy...&gt;BibTex entry and paste it into your BibTex file (I also have a script that formats your entire Papers library for BibTex with meaningful labels).\nYou can render citations in different ways to accommodate their sentence. Skov et al. reported strong selection on the human X chromosome (2023). Lineages in small populations have shorter coalescence times (see Nielsen and Slatkin 2016, chap. 1). The Neanderthal genome has been sequenced (Prüfer et al. 2012). The X chromosome is subject to recurrent sweeps (Nam et al. 2015; Dutheil et al. 2015). Following Munch et al. (2014), we blah blah…",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#illustrations",
    "href": "reports/example.html#illustrations",
    "title": "Markdown in Quarto",
    "section": "Illustrations",
    "text": "Illustrations\nYou can see an elephant in Figure 6.1.\n\n\n\n\n\n\nFigure 6.1: Some caption for an illustration showing an elephant\n\n\n\nElephants are big (Figure 6.2):\n\n\n\n\n\n\nFigure 6.2\n\n\n\nThere are two elephants in Figure 6.3. The elephants in Figure 6.3 (a) and Figure 6.3 (b) look similar.\n\n\n\n\n\n\n\n\n\n\n\n(a)\n\n\n\n\n\n\n\n\n\n\n\n(b)\n\n\n\n\n\n\n\nFigure 6.3: Some caption you wrote for an illustration of two elephants.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#asides",
    "href": "reports/example.html#asides",
    "title": "Markdown in Quarto",
    "section": "Asides",
    "text": "Asides\nIf you like, you can make comments in the margin without footnote a reference.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#plot-included-from-notebook",
    "href": "reports/example.html#plot-included-from-notebook",
    "title": "Markdown in Quarto",
    "section": "Plot included from notebook",
    "text": "Plot included from notebook\nSee plot Figure 6.4 below.\n\n\n\n\n\n\n\n\n\nFigure 6.4: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.\n\n\n\n\n\n\nOr this really wide plot below (Figure 6.5).\n\n\n\n\n\n\n\n\n\n\nFigure 6.5: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#text-included-from-notebook",
    "href": "reports/example.html#text-included-from-notebook",
    "title": "Markdown in Quarto",
    "section": "Text included from notebook",
    "text": "Text included from notebook\n\n\n\nThe 24 subjects from workplaces in Denmark were interviewed …. blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#table-included-from-notebook",
    "href": "reports/example.html#table-included-from-notebook",
    "title": "Markdown in Quarto",
    "section": "Table included from notebook",
    "text": "Table included from notebook\nThese were selected to represent as many nationalities as possible (Table 6.1).\nyou can also allow the table to be wider\n\n\n\n\n\nTable 6.1: People included in the analysis.\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\n\n\n\n\nJulie\n27\nF\nPhDstudent\nDK\n\n\nThomas\n33\nM\nPostdoc\nGB\n\n\nEmilie\n23\nF\nPhDstudent\nCH\n\n\nSofie\n31\nF\nPostdoc\nDK\n\n\nSara\n29\nF\nPostdoc\nUS\n\n\nCecilie\n34\nF\nPostdoc\nDK\n\n\nAnders\n32\nM\nPhDstudent\nUK\n\n\nEmma\n42\nF\nProfessor\nDK\n\n\nCaroline\n31\nF\nPhDstudent\nDK\n\n\nLaura\n30\nF\nPostdoc\nDK\n\n\nMikkel\n33\nM\nPostdoc\nNL\n\n\nJens\n27\nM\nPhDstudent\nDK\n\n\nAndreas\n29\nM\nPhDstudent\nDK\n\n\nJakob\n28\nM\nPhDstudent\nDK\n\n\nMathilde\n61\nF\nProfessor\nDK\n\n\nKatrine\n35\nF\nPostdoc\nDK\n\n\nPoul\n30\nM\nPostdoc\nDK\n\n\nAnna\n26\nF\nPhDstudent\nDK\n\n\nPeter\n42\nM\nProfessor\nGB\n\n\nIda\n53\nF\nPostdoc\nDK\n\n\nFreja\n30\nF\nPostdoc\nDK\n\n\nMaria\n39\nF\nProfessor\nUK\n\n\nAmalie\n29\nF\nPhDstudent\nDK\n\n\nCamilla\n35\nF\nPostdoc\nDK",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#margin-content",
    "href": "reports/example.html#margin-content",
    "title": "Markdown in Quarto",
    "section": "Margin content",
    "text": "Margin content\nYou can anything in the margin like Figure 6.6.\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.6: Figure legends are defined alongside the figure in the notebook. The figure size in the notebook is determines its size when embedded in a document 4x3 inches.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#diagrams",
    "href": "reports/example.html#diagrams",
    "title": "Markdown in Quarto",
    "section": "Diagrams",
    "text": "Diagrams\nDiagram in Figure 6.7.\n\nCode\ngraph G {\n  layout=neato\n  run -- intr;\n  intr -- runbl;\n  runbl -- run;\n  run -- kernel;\n  kernel -- zombie;\n  kernel -- sleep;\n  kernel -- runmem;\n  sleep -- swap;\n  swap -- runswap;\n  runswap -- new;\n  runswap -- runmem;\n  new -- runmem;\n  sleep -- runmem;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nG\n\n\n\nrun\n\nrun\n\n\n\nintr\n\nintr\n\n\n\nrun--intr\n\n\n\n\nkernel\n\nkernel\n\n\n\nrun--kernel\n\n\n\n\nrunbl\n\nrunbl\n\n\n\nintr--runbl\n\n\n\n\nrunbl--run\n\n\n\n\nzombie\n\nzombie\n\n\n\nkernel--zombie\n\n\n\n\nsleep\n\nsleep\n\n\n\nkernel--sleep\n\n\n\n\nrunmem\n\nrunmem\n\n\n\nkernel--runmem\n\n\n\n\nsleep--runmem\n\n\n\n\nswap\n\nswap\n\n\n\nsleep--swap\n\n\n\n\nrunswap\n\nrunswap\n\n\n\nswap--runswap\n\n\n\n\nrunswap--runmem\n\n\n\n\nnew\n\nnew\n\n\n\nrunswap--new\n\n\n\n\nnew--runmem\n\n\n\n\n\n\n\n(a) This is a simple graphviz graph.\n\n\n\n\n\n\n\nFigure 6.7\n\n\n\n\n\nCode\nflowchart LR\n  A[Beginning] --&gt; B[Middle]\n  B --&gt; C[End]\n\n\n\n\n\nflowchart LR\n  A[Beginning] --&gt; B[Middle]\n  B --&gt; C[End]\n\n\n\n\n\n\n\n\n\n\nCode\nflowchart LR\n  A[Beginning] --&gt; B[Middle]\n  B --&gt; C[End]\n\n\n\n\n\nflowchart LR\n  A[Beginning] --&gt; B[Middle]\n  B --&gt; C[End]\n\n\n\n\n\n\nThis is a flow chart.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#code",
    "href": "reports/example.html#code",
    "title": "Markdown in Quarto",
    "section": "Code",
    "text": "Code\nExecuted but hide code and any output:\nShow and execute Python code:\n\n\nCode\nx = 5\n\n\nValues can be embedded in the text, too. The value of x is 5.\nShown, not executed, Python code:\ny = 4\n\n\nA for loop:\nfor i in range(10):\n    print(i)\nShown, not executed, R code:\nz &lt;- 7",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#math",
    "href": "reports/example.html#math",
    "title": "Markdown in Quarto",
    "section": "Math",
    "text": "Math\nThis is calculated as \\(\\pi_k = \\prod_{i=1}^K x_i\\). You can crossref formulas (Equation 6.1).\n\\[\n\\lambda = \\sum_{k=1}^N \\pi_k\n\\tag{6.1}\\]\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#bold-and-italics",
    "href": "reports/example.html#bold-and-italics",
    "title": "Markdown in Quarto",
    "section": "Bold and italics",
    "text": "Bold and italics\nThis is bold, so is this. This is italics, so is this. This is both, so is this.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  },
  {
    "objectID": "reports/example.html#section",
    "href": "reports/example.html#section",
    "title": "Markdown in Quarto",
    "section": "Section",
    "text": "Section\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n\nSubsection\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n\n\nSubsubsection\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n\n\n\n\nDutheil, Julien Y, Kasper Munch, Kiwoong Nam, Thomas Mailund, and Mikkel H Schierup. 2015. “Strong Selective Sweeps on the X Chromosome in the Human-Chimpanzee Ancestor Explain Its Low Divergence.” PLOS Genetics 11 (8): e1005451. https://doi.org/10.1371/journal.pgen.1005451.\n\n\nMunch, Kasper, Thomas Mailund, Julien Y Dutheil, and Mikkel Schierup. 2014. “A fine-scale recombination map of the human–chimpanzee ancestor reveals faster change in humans than in chimpanzees and a strong impact of GC-biased gene conversion.” Genome Research 24 (3): 467–74. https://doi.org/10.1101/gr.158469.113.\n\n\nNam, Kiwoong, Kasper Munch, Asger Hobolth, Julien Dutheil, Krishna R Veeramah, August E Woerner, Michael F Hammer, et al. 2015. “Extreme selective sweeps independently targeted the X chromosomes of the great apes.” Proceedings of the National Academy of Sciences 112 (20): 6413–18. https://doi.org/10.1073/pnas.1419306112.\n\n\nNielsen, Rasmgb, and Montgomery Slatkin. 2016. An Introduction to Population Genetics: Theory and Applications.\n\n\nPrüfer, Kay, Kasper Munch, Ines Hellmann, Keiko Akagi, Jason R. Miller, Brian Walenz, Sergey Koren, et al. 2012. “The bonobo genome compared with the chimpanzee and human genomes.” Nature 486 (7404): 527–31. https://doi.org/10.1038/nature11128.\n\n\nSkov, Laurits, Moisès Coll Macià, Elise Anne Lucotte, Maria Izabel Alvez Cavassim, David Castellano, Mikkel Heide Schierup, and Kasper Munch. 2023. “Extraordinary selection on the human X chromosome associated with archaic admixture.” Cell Genomics, 100274. https://doi.org/10.1016/j.xgen.2023.100274.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Markdown in Quarto</span>"
    ]
  }
]